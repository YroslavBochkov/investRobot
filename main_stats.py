from robotlib.stats import BalanceProcessor, BalanceCalculator, TradeStatisticsAnalyzer


def print_stats(stats_path, label):
    try:
        stats = TradeStatisticsAnalyzer.load_from_file(stats_path)
    except FileNotFoundError:
        print(f"–§–∞–π–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {stats_path}")
        print("–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ä–æ–±–æ—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
        return

    short, full = stats.get_report(processors=[BalanceProcessor()], calculators=[BalanceCalculator()])

    print(f"\n=== {label} ===")
    print(full)
    print(short)

    income = short.get("income", 0)
    commission = short.get("total_commission", 0)
    if income > 0:
        print(f"\n‚úÖ –í–´ –ó–ê–†–ê–ë–û–¢–ê–õ–ò (—Å —É—á—ë—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏): {income:.2f} —Ä—É–±.")
    elif income < 0:
        print(f"\n‚ùå –í–´ –ü–û–¢–ï–†–Ø–õ–ò (—Å —É—á—ë—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏): {abs(income):.2f} —Ä—É–±.")
    else:
        print("\n‚ÑπÔ∏è  –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥: 0 —Ä—É–±.")
    print(f"üí∏ –í—Å–µ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ –Ω–∞ –∫–æ–º–∏—Å—Å–∏—é: {commission:.2f} —Ä—É–±.")

def main():
    print_stats('/Users/yaroslav/–ü–µ—Ç–ø—Ä–æ–µ–∫—Ç/investRobot/stats.pickle', 'SBER')
    print_stats('/Users/yaroslav/–ü–µ—Ç–ø—Ä–æ–µ–∫—Ç/investRobot/stats_tcsg.pickle', '–¢–∏–Ω—å–∫–æ—Ñ—Ñ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ (T)')


if __name__ == '__main__':
    main()
